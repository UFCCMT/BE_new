--lpm_counter CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Stratix V" lpm_direction="DOWN" lpm_port_updown="PORT_UNUSED" lpm_width=5 aclr clock cnt_en cout sload CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=32
--VERSION_BEGIN 14.0 cbx_cycloneii 2014:06:17:18:06:03:SJ cbx_lpm_add_sub 2014:06:17:18:06:03:SJ cbx_lpm_compare 2014:06:17:18:06:03:SJ cbx_lpm_counter 2014:06:17:18:06:03:SJ cbx_lpm_decode 2014:06:17:18:06:03:SJ cbx_mgl 2014:06:17:18:10:38:SJ cbx_stratix 2014:06:17:18:06:03:SJ cbx_stratixii 2014:06:17:18:06:03:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.


FUNCTION stratixv_lcell_comb (cin, dataa, datab, datac, datad, datae, dataf, datag, sharein)
WITH ( DONT_TOUCH, EXTENDED_LUT, LUT_MASK, SHARED_ARITH)
RETURNS ( combout, cout, shareout, sumout);

--synthesis_resources = lut 5 reg 5 
SUBDESIGN cntr_1oj
( 
	aclr	:	input;
	clock	:	input;
	cnt_en	:	input;
	cout	:	output;
	sload	:	input;
) 
VARIABLE 
	counter_reg_bit[4..0] : dffeas;
	counter_comb_bita0 : stratixv_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "000000000000FF00",
			SHARED_ARITH = "off"
		);
	counter_comb_bita1 : stratixv_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "0000FF000000FF00",
			SHARED_ARITH = "off"
		);
	counter_comb_bita2 : stratixv_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "0000FF000000FF00",
			SHARED_ARITH = "off"
		);
	counter_comb_bita3 : stratixv_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "0000FF000000FF00",
			SHARED_ARITH = "off"
		);
	counter_comb_bita4 : stratixv_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "0000FF000000FF00",
			SHARED_ARITH = "off"
		);
	aclr_actual	: WIRE;
	clk_en	: NODE;
	cout_actual	: WIRE;
	data[4..0]	: NODE;
	external_cin	: WIRE;
	lsb_cin	: WIRE;
	s_val[4..0]	: WIRE;
	sclr	: NODE;
	sset	: NODE;
	time_to_clear	: WIRE;
	updown_dir	: WIRE;
	updown_lsb	: WIRE;
	updown_other_bits	: WIRE;

BEGIN 
	counter_reg_bit[].asdata = ((sset & s_val[]) # ((! sset) & data[]));
	counter_reg_bit[].clk = clock;
	counter_reg_bit[].clrn = (! aclr_actual);
	counter_reg_bit[].d = ( counter_comb_bita[4..0].sumout);
	counter_reg_bit[].ena = (clk_en & (((cnt_en # sclr) # sset) # sload));
	counter_reg_bit[].sclr = sclr;
	counter_reg_bit[].sload = (sset # sload);
	counter_comb_bita[4..0].cin = ( counter_comb_bita[3..0].cout, lsb_cin);
	counter_comb_bita[4..0].datad = ( counter_reg_bit[4..0].q);
	counter_comb_bita[4..0].dataf = ( updown_other_bits, updown_other_bits, updown_other_bits, updown_other_bits, updown_lsb);
	aclr_actual = aclr;
	clk_en = VCC;
	cout = cout_actual;
	cout_actual = (((! counter_comb_bita[4].cout) $ updown_other_bits) # (time_to_clear & updown_dir));
	data[] = GND;
	external_cin = B"1";
	lsb_cin = B"0";
	s_val[] = B"11111";
	sclr = GND;
	sset = GND;
	time_to_clear = B"0";
	updown_dir = B"0";
	updown_lsb = updown_dir;
	updown_other_bits = ((! external_cin) # updown_dir);
	ASSERT (0) 
	REPORT "The data port is not connected or grounded when SLOAD is used"
	SEVERITY WARNING;
END;
--VALID FILE
